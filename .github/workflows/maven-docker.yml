name: Java CI for Subdirectory with Maven

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths:
      - 'github-actions-spring-boot/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'github-actions-spring-boot/**'

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
     name:  docker-env
    # environment: docker-env  # Removed invalid environment specification
    permissions:
      security-events: write
      actions: read
      contents: read
      id-token: write

    steps:
    - name: Check out repository code
      uses: actions/checkout@v5

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: java

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Build with Maven
      run: mvn -B package --file github-actions-spring-boot/pom.xml

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

    - name: Build Docker image
      id: build-and-load
      uses: docker/build-push-action@v5
      with:
        context: ./github-actions-spring-boot
        file: ./github-actions-spring-boot/Dockerfile
        push: false
        load: true
        tags: my-app:latest

    - name: Debug image tags
      run: |
        echo "Full tags output: ${{ steps.build-and-load.outputs.tags }}"
        echo "First tag output: ${{ steps.build-and-load.outputs.tags[0] }}"

    - name: Create Trivy results directory
      run: mkdir -p trivy-results

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: my-app:latest
        format: 'sarif'
        output: 'trivy-results/trivy-results.sarif'

    - name: Debug Trivy output path
      run: |
        ls -la
        ls -la trivy-results/

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results/trivy-results.sarif'

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Push Docker image to Registry
      run: docker push my-app:latest
